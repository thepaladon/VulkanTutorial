<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Test|x64">
      <Configuration>Test</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="BEARHeaders\BLAS.h" />
    <ClInclude Include="BEARHeaders\Buffer.h" />
    <ClInclude Include="BEARHeaders\CommandList.h" />
    <ClInclude Include="BEARHeaders\ComputePipelineDescription.h" />
    <ClInclude Include="BEARHeaders\ResourceDescriptorHeap.h" />
    <ClInclude Include="BEARHeaders\Sampler.h" />
    <ClInclude Include="BEARHeaders\SamplerDescriptorHeap.h" />
    <ClInclude Include="BEARHeaders\ShaderLayout.h" />
    <ClInclude Include="BEARHeaders\Texture.h" />
    <ClInclude Include="BEARHeaders\TLAS.h" />
    <ClInclude Include="BEARVulkan\TypeDefs.h" />
    <ClInclude Include="Utils\FreeCamera.h" />
    <ClInclude Include="Utils\ConsoleLogger.h" />
    <ClInclude Include="Utils\Transform.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Utils\FreeCamera.cpp" />
    <ClCompile Include="Utils\ConsoleLogger.cpp" />
    <ClCompile Include="Utils\Transform.cpp" />
    <ClCompile Include="Source\VulkanTutorial.cpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{9c2f7bb2-17ba-4336-ac9d-52980a36818c}</ProjectGuid>
    <RootNamespace>VulkanTutorial</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Test|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Test|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)Build\Executable\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\Executable\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)Build\Executable\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\Executable\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Test|x64'">
    <OutDir>$(SolutionDir)Build\Executable\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\Executable\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnabled>true</VcpkgEnabled>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions); GLM_ENABLE_EXPERIMENTAL</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VULKAN_SDK);$(ProjectDir);$(SolutionDir)Dependencies\Include;$(SolutionDir)Dependencies\;$(SolutionDir)Dependencies\ImGui;$(SolutionDirDependencies\Headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK);$(SolutionDir)Dependencies\Lib\assimp;$(SolutionDir)Dependencies\Lib\GLFW-vc2022;$(SolutionDir)Build\Library\Dependencies\$(Configuration);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Dependencies.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ProjectReference />
    <ProjectReference />
    <PreBuildEvent>
      <Command>xcopy /y /d "D:\e-repo\VulkanTutorial\Dependencies\Lib\assimp\assimp-vc143-mt.dll" "$(OutDir)"</Command>
      <Message>Copy the Assimp DLL</Message>
    </PreBuildEvent>
    <CustomBuildStep>
      <Command>cd ..\Shaders\HLSL
call $(SolutionDir)Shaders\HLSL\compileHLSL.bat
cd ..\GLSL
call $(SolutionDir)Shaders\GLSL\compileGLSL.bat</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>Compiling Shaders</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>$(SolutionDir)Shaders\Compiled\*.spv</Outputs>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>xcopy /E /I /Y "$(SolutionDir)Shaders\Compiled" "$(TargetDir)Shaders\Compiled"
xcopy /E /I /Y "$(SolutionDir)Resources" "$(TargetDir)Resources"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy the shaders and resources to Build folder</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Test|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions) ; GLM_ENABLE_EXPERIMENTAL</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VULKAN_SDK);$(ProjectDir);$(SolutionDir)Dependencies\Include;$(SolutionDir)Dependencies\;$(SolutionDir)Dependencies\ImGui;$(SolutionDirDependencies\Headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <EnableFiberSafeOptimizations>false</EnableFiberSafeOptimizations>
      <WholeProgramOptimization>true</WholeProgramOptimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <TreatWarningAsError>true</TreatWarningAsError>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK);$(SolutionDir)Dependencies\Lib\assimp;$(SolutionDir)Dependencies\Lib\GLFW-vc2022;$(SolutionDir)Build\Library\Dependencies\$(Configuration);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Dependencies.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ProjectReference />
    <ProjectReference />
    <PreBuildEvent>
      <Command>xcopy /y /d "D:\e-repo\VulkanTutorial\Dependencies\Lib\assimp\assimp-vc143-mt.dll" "$(OutDir)"</Command>
      <Message>Copy the Assimp DLL</Message>
    </PreBuildEvent>
    <CustomBuildStep>
      <Command>cd ..\Shaders\HLSL
call $(SolutionDir)Shaders\HLSL\compileHLSL.bat
cd ..\GLSL
call $(SolutionDir)Shaders\GLSL\compileGLSL.bat</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>Compiling Shaders</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>$(SolutionDir)Shaders\Compiled\*.spv</Outputs>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>xcopy /E /I /Y "$(SolutionDir)Shaders\Compiled" "$(TargetDir)Shaders\Compiled"
xcopy /E /I /Y "$(SolutionDir)Resources" "$(TargetDir)Resources"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy the shaders and resources to Build folder</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions); GLM_ENABLE_EXPERIMENTAL</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VULKAN_SDK);$(ProjectDir);$(SolutionDir)Dependencies\Include;$(SolutionDir)Dependencies\;$(SolutionDir)Dependencies\ImGui;$(SolutionDirDependencies\Headers;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK);$(SolutionDir)Dependencies\Lib\assimp;$(SolutionDir)Dependencies\Lib\GLFW-vc2022;$(SolutionDir)Build\Library\Dependencies\$(Configuration);</AdditionalLibraryDirectories>
      <AdditionalDependencies>Dependencies.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <ProjectReference />
    <ProjectReference />
    <PreBuildEvent>
      <Command>xcopy /y /d "D:\e-repo\VulkanTutorial\Dependencies\Lib\assimp\assimp-vc143-mt.dll" "$(OutDir)"</Command>
      <Message>Copy the Assimp DLL</Message>
    </PreBuildEvent>
    <CustomBuildStep>
      <Command>cd ..\Shaders\HLSL
call $(SolutionDir)Shaders\HLSL\compileHLSL.bat
cd ..\GLSL
call $(SolutionDir)Shaders\GLSL\compileGLSL.bat</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Message>Compiling Shaders</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>$(SolutionDir)Shaders\Compiled\*.spv</Outputs>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>xcopy /E /I /Y "$(SolutionDir)Shaders\Compiled" "$(TargetDir)Shaders\Compiled"
xcopy /E /I /Y "$(SolutionDir)Resources" "$(TargetDir)Resources"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copy the shaders and resources to Build folder</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>