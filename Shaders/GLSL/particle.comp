#version 450

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
} ubo;

layout (binding = 1) uniform ColourUBO {
    vec4 color;
} colors;

struct Particle {
    vec3 position;
	vec3 color;
	vec3 velocity;
};

layout(std140, binding = 2) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 3) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() 
{
    uint index = gl_GlobalInvocationID.x;  

    Particle particleIn = particlesIn[index];

    particlesOut[index].position = particleIn.position + particleIn.velocity * ubo.deltaTime;
    particlesOut[index].color = colors.color.xyz;
    particlesOut[index].velocity = particleIn.velocity;
}
